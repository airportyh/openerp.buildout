[buildout]
extensions =
    buildout.bootstrap
    mr.developer
relative-paths = true
unzip = true
always-checkout = force
auto-checkout = *
parts =
    system-deps
    system-init
    timezone-setup
    postgresql-install
    openerp
    openerp-server
    openerp-init
    openerp-config
find-links =
    http://download.gna.org/pychart/PyChart-1.39.tar.gz


[system-deps]
# Here we list all external command lines we reference in this buildout
# TODO: it may make sense later to replace all of them by pure Python code
recipe = anybox.recipe.sysdeps
bin =
    mkdir:coreutils
    cp:coreutils
    echo:coreutils
    kill:coreutils
    useradd:passwd
    lsb-release:lsb-release
    sudo:sudo
    find:findutils
    xargs:findutils
    sed:sed
    grep:grep
    awk:awk
    patch:patch
    dpkg:dpkg
    dpkg-reconfigure:debconf
    postgres:PostgreSQL
    pg_createcluster:PostgreSQL
    gcc:GCC
    bzr:Bazaar
    svn:Subversion
    git:Git


[system-init]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    # Stop all previous processes
    sudo kill `ps -ef | grep openerp-shell | awk '{print $2}'`
    sudo /etc/init.d/postgresql stop
    # Patch Debian Squeeze's Bazaar to let it work through a proxy
    # See: http://bugs.launchpad.net/bzr/+bug/558343
    test `lsb_release --codename --short` = 'squeeze' && dpkg --list bzr | grep --quiet '2.1.2-1' && echo patch --forward -p0 -d /usr/share/pyshared < ${buildout:directory}/patches/bzr-2.1.2-1-debian-squeeze-proxy.patch || echo 'No need to patch Bazaar'


[timezone-setup]
# Source: http://serverfault.com/questions/84521/automate-dpkg-reconfigure-tzdata
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    sudo echo "Etc/UTC" > /etc/timezone
    sudo dpkg-reconfigure -f noninteractive tzdata


[postgresql-install]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    # Force initialization of the default cluster
    sudo pg_createcluster 8.4 main
    # Allow local authentication
    sudo sed -i 's/^local\s\+all\s\+all\s\+ident/local all all trust/g' /etc/postgresql/8.4/main/pg_hba.conf
    sudo sed -i 's/^host\s\+all\s\+all\s\+\(.*\)\s\+md5/host all all \1 trust/g' /etc/postgresql/8.4/main/pg_hba.conf
    # Activate autovacuum
    sudo sed -i 's/^#autovacuum = on/autovacuum = on/g' /etc/postgresql/8.4/main/postgresql.conf
    # Set timezone to maintain consistency
    sudo sed -i 's/^#timezone = unknown/timezone = UTC/g' /etc/postgresql/8.4/main/postgresql.conf
    # Restart the server to apply our configuration above
    sudo /etc/init.d/postgresql restart
    # Create a default openerp user and database
    sudo su postgres -c "createuser --createdb --no-createrole --superuser --no-password openerp"


[openerp]
recipe = gf.recipe.bzr
in_parts = True
develop = False
# Custom variables
location = ${buildout:directory}/parts/openerp/
server_addons =
webclient_addons =


[openerp-init]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    # TODO: factorize addon symlinking code
    # Recreate all addons symlinks everytime to keep a fresh module list
    mkdir -p ${openerp:location}/server/bin/addons
    find ${openerp:location}/server/bin/addons -type l -delete
    for ADDONS in `echo "${openerp:server_addons}"` ; do find ${openerp:location}/$ADDONS -maxdepth 0 -type d | xargs -I {} ln -s --force {} ${openerp:location}/server/bin/addons/ ; done
    # Do the same for the web client
    mkdir -p ${openerp:location}/web-client/addons
    find ${openerp:location}/web-client/addons -type l -delete
    for ADDONS in `echo "${openerp:webclient_addons}"` ; do find ${openerp:location}/$ADDONS -maxdepth 0 -type d | xargs -I {} ln -s --force {} ${openerp:location}/web-client/addons/ ; done
    # OpenERP refuse to run as root, let's create a dedicated user
    sudo useradd --create-home openerp
    # Force update of modules for all OpenERP databases
    # TODO: automate the command below
    #su openerp -c "${buildout:directory}/bin/${openerp-server:interpreter} ${openerp:location}/server/bin/openerp-server.py -u all -d $OPENERP_DB"
    # /server/bin is not seen as a module and we'll not be able to let zc.recipe.egg create a command script, unless we create an init script.
    #touch ${openerp:location}/server/bin/__init__.py


[openerp-config]
# Generate a default config file for OpenERP server
recipe = collective.recipe.template
input = ${buildout:directory}/templates/openerp_server.conf.in
output = ${buildout:directory}/parts/openerp_server.conf


[openerp-server]
recipe = zc.recipe.egg:scripts
eggs =
    lxml == 2.1.5
    psycopg2
    reportlab
    egenix-mx-base
    PIL
    vobject
    pyparsing
    xlwt
    setuptools
    PyChart
    pydot
    caldav
    PyYAML
    PyWebDAV
    feedparser
    Babel >= 0.9.4
    simplejson >= 2.0.9
    python-dateutil < 2.0
    pytz >= 2009j
extra-paths =
    ${openerp:location}/server/bin
    ${openerp:location}/web-client
interpreter = openerp-shell
#entry-points = openerp-server.py=openerp-server.py:main

